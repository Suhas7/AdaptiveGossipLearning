
# 11/21/2022

## TODOs

* Test if current weight merging method works
  [ ] Run env with 2 agents, top weight 50 for 5 classes and gridsearch for optimal beta
* Test new method (gradient merge method)
  [ ] Test if current gradient merge method works properly

# 10/24/2022

## Some possible questions about our current method

* Weight average of beta might not work i.e. averaging two good models' weight probably won't work. In Decentralized Federated Learning via Mutual Knowledge Transfer, instead of using their weights directly, they incorporate peer knowledge by learning peer's "soft prediction".

# 10/13/2022

## Soft DL: 10/18

* make code GPU compatible (Zejian)
* fix TODO in GossipAgent (Zejian)
* move data_distribution inside Driver (driver split data into `num_agents` parts, don't need to be a partition, and then pass it to agent) (Suhas)
* data collection (tensorboard) (Robert)
  * beta_value (for each agent / iteration), local reward (per agent), peer reward (per agent), total reward (local+peer)
  * evaluation f1_score on test_data (inside main)
  * agent_pairs each round (think about ways to visualize that e.g. nxn matrix?)

# 10/05/2022

## DL: 10/09/2022

* beta stuffs
	* make beta policy discrete (specify value as hyperpameters)
	* complete beta policy update (REINFORCE style update) 
		* (zejian)
* Add main file and make our code modularized which can be turned on/off
	* (robert)
* Combine peer model (https://github.com/Suhas7/WeightedGossipLearning/blob/master/GossipAgent.py#L98)
	* (zejian)
* Run simple config of our code (group)
	* MNIST, 2 agents, 1x1 grid world (update every round), uniform data distribution
	* MNIST, 2 agents, 1x1 grid world (update every round), un-balanced data distribution
			
# 09/28/2022

implement environment for adjacency matrix & gridworld (robert)
actually use models in GossipAgent.py
	implement prediction model (robert)
		MLP & CNN
	design beta policy network (logistic regression) (robert)
	(zejian):
		implement self.
			evaluate(other)
			local_step
		complete stage5helper
			update beta policy
			calculate composite gradient
			apply peer learning step using composite gradient
